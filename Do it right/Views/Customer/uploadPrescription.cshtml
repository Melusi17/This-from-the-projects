@{
    ViewData["Title"] = "Upload Prescription";
    Layout = "~/Views/Shared/CustomerLayout/_CustomerLayout.cshtml";
}

<style>
    .drop-area {
        border: 2px dashed #1f9f77;
        padding: 40px;
        text-align: center;
        cursor: pointer;
        color: #1f9f77;
        border-radius: 10px;
        margin-bottom: 20px;
        transition: background-color 0.3s;
    }

        .drop-area.drag-over {
            background-color: #e0f7f1;
            border-color: #28bf96;
        }

    .file-preview {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 20px;
    }

    .btn-remove {
        background-color: #e74c3c;
        color: white;
        border: none;
        padding: 6px 12px;
        border-radius: 4px;
        cursor: pointer;
    }

    .btn-upload {
        background-color: #1f9f77;
        color: white;
        border: none;
        padding: 10px 20px;
        border-radius: 5px;
        font-weight: bold;
        cursor: pointer;
    }

    .checkbox-container {
        margin-top: 15px;
        text-align: left;
    }

    .checkbox-label {
        display: flex;
        align-items: center;
        font-weight: 500;
        font-size: 14px;
        color: #333;
        gap: 8px;
    }

    .modal {
        display: none;
        position: fixed;
        z-index: 10000;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        overflow: auto;
        background-color: rgba(0,0,0,0.4);
        padding-top: 60px;
    }

    .modal-content {
        background-color: #fff;
        margin: 5% auto;
        padding: 20px;
        border: 1px solid #888;
        width: 40%;
        border-radius: 8px;
    }

    .close {
        float: right;
        font-size: 24px;
        font-weight: bold;
        cursor: pointer;
    }

        .close:hover {
            color: red;
        }
</style>


    <h2>📥 Upload Prescription</h2>

    <!-- Drop area -->
    <div id="drop-area" class="drop-area">
        <p>Drag & Drop PDF/Image here or click to select</p>
        <input type="file" id="prescriptionFile" name="prescriptionFile" accept=".pdf, image/*" required hidden>
    </div>

    <!-- File preview with remove button -->
    <div id="filePreview" class="file-preview" style="display:none;">
        <span id="fileName"></span>
        <button type="button" class="btn-remove" onclick="removeSelectedFile()">❌ Remove</button>
    </div>

    <!-- Dispense checkbox -->
    <div class="checkbox-container">
        <label class="checkbox-label">
            <input type="checkbox" id="dispenseCheckbox" name="dispenseCheckbox">
            Dispense this prescription upon approval
        </label>
    </div>

<!-- Upload Button -->
<button type="button" class="btn-upload" onclick="uploadPrescription()">Upload</button>


    <div class="upload-prescription-panel">
        <h2>📋 Unprocessed Prescriptions</h2>
        <table class="prescription-table">
            <thead>
                <tr>
                    <th>Date</th>
                    <th>File</th>
                    <th>Dispense</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody id="unprocessedBody">
                <!-- Hardcoded sample record -->
                <tr>
                    <td>2025-05-13</td>
                    <td>Prescription_ABC.pdf</td>
                    <td>Yes</td>
                    <td>

                    <button class="btn-upload" onclick="openEditModal(this)">Edit</button>

                        <button class="btn-upload" onclick="this.parentElement.parentElement.remove()">Remove</button>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>

<!-- Edit Prescription Modal -->
<div id="editModal" class="modal">
    <div class="modal-content">
        <span class="close" onclick="closeEditModal()">&times;</span>
        <h3>✏️ Edit Prescription</h3>

        <div class="form-group">
            <label for="editFileInput">Select New File (PDF/Image):</label>
            <input type="file" id="editFileInput" accept=".pdf, image/*">
        </div>

        <div class="checkbox-container">
            <label class="checkbox-label">
                <input type="checkbox" id="editDispenseCheckbox">
                Dispense this prescription upon approval
            </label>
        </div>

        <button class="btn-upload" onclick="saveEdit()">Save Changes</button>
    </div>
</div>



    <div class="upload-prescription-panel">
        <h2>✅ Processed Prescriptions</h2>
        <table class="prescription-table">
            <thead>
                <tr>
                    <th>Date</th>
                    <th>Doctor</th>
                    <th>Prescription</th>
                    <th>Order Medication</th>
                </tr>
            </thead>
            <tbody id="processedBody">
                <!-- Example hardcoded data -->
                <tr>
                    <td>2025-05-13</td>
                    <td>Dr. John Smith</td>
                    <td>Prescription_XYZ.pdf</td>
                    <td><button class="btn-upload" onclick="openOrderModal('2025-05-13', 'Dr. John Smith')">View</button></td>
                </tr>
            </tbody>
        </table>
    </div>
    <!-- Medication Order Modal -->
    <div id="orderModal" class="modal-overlay" style="display: none;">
        <div class="modal-content">
            <h2>🩺 Order Medication</h2>
            <div class="order-details">
                <p><strong>Date:</strong> <span id="modalDate">2025-05-13</span></p>
                <p><strong>Doctor:</strong> <span id="modalDoctor">Dr. John Smith</span></p>
            </div>

            <table class="prescription-table">
                <thead>
                    <tr>
                        <th>Select</th>
                        <th>Medication</th>
                        <th>Qty</th>
                        <th>Instructions</th>
                        <th>Repeats</th>
                        <th>Price (R)</th>
                    </tr>
                </thead>
                <tbody id="modalMedications">
                    <tr>
                        <td><input type="checkbox" class="med-check" data-price="120" onchange="updateTotal()"></td>
                        <td>Amoxicillin</td>
                        <td>2</td>
                        <td>Twice a day</td>
                        <td>1</td>
                        <td>120</td>
                    </tr>
                    <tr>
                        <td><input type="checkbox" class="med-check" data-price="60" onchange="updateTotal()"></td>
                        <td>Ibuprofen</td>
                        <td>1</td>
                        <td>After meals</td>
                        <td>0</td>
                        <td>60</td>
                    </tr>
                </tbody>
            </table>

            <div class="total-summary">
                <p><strong>Total (incl. VAT): R</strong><span id="totalDue">0.00</span></p>
            </div>

            <button class="btn-upload" onclick="placeMedicationOrder()">Place Order</button>
            <button class="btn-upload" style="background-color: grey;" onclick="closeModal()">Close</button>
        </div>
    </div>

    <script>
        const dropArea = document.getElementById('drop-area');
        const fileInput = document.getElementById('prescriptionFile');
        const filePreview = document.getElementById('filePreview');
        const fileNameDisplay = document.getElementById('fileName');

        // Trigger file input on click
        dropArea.addEventListener('click', () => fileInput.click());

        // When user selects a file manually
        fileInput.addEventListener('change', (e) => {
            handleFileUpload(e.target.files[0]);
        });

        // Drag over styling
        dropArea.addEventListener('dragover', (e) => {
            e.preventDefault();
            dropArea.classList.add('drag-over');
        });

        dropArea.addEventListener('dragleave', () => {
            dropArea.classList.remove('drag-over');
        });

        // Handle dropped file
        dropArea.addEventListener('drop', (e) => {
            e.preventDefault();
            dropArea.classList.remove('drag-over');
            const file = e.dataTransfer.files[0];
            if (file) {
                fileInput.files = e.dataTransfer.files; // attach dropped file to input
                handleFileUpload(file);
            }
        });

        function handleFileUpload(file) {
            fileNameDisplay.textContent = file.name;
            filePreview.style.display = 'flex';
        }

        function removeSelectedFile() {
            fileInput.value = ""; // clear input
            filePreview.style.display = 'none';
            fileNameDisplay.textContent = "";
        }

        function showConfirmation(event) {
        event.preventDefault(); // Prevent form submission
        alert("Prescription uploaded successfully!");
        }
         let currentEditRow = null;

    function openEditModal(button) {
        currentEditRow = button.closest('tr');

        // Populate current values
        const fileName = currentEditRow.cells[1].textContent.trim();
        const dispense = currentEditRow.cells[2].textContent.trim().toLowerCase() === 'yes';

        document.getElementById("editFileInput").value = ""; // Clear previous file
        document.getElementById("editDispenseCheckbox").checked = dispense;

        // Show modal
        document.getElementById("editModal").style.display = "block";
    }

    function closeEditModal() {
        document.getElementById("editModal").style.display = "none";
        currentEditRow = null;
    }

    function saveEdit() {
        if (!currentEditRow) return;

        const fileInput = document.getElementById("editFileInput");
        const dispenseChecked = document.getElementById("editDispenseCheckbox").checked;

        if (fileInput.files.length > 0) {
            // Update filename only if a new file is selected
            const newFileName = fileInput.files[0].name;
            currentEditRow.cells[1].textContent = newFileName;
        }

        // Update dispense value
        currentEditRow.cells[2].textContent = dispenseChecked ? "Yes" : "No";

        closeEditModal();
    }
     function uploadPrescription() {
        const fileInput = document.getElementById('prescriptionFile');
        const dispenseChecked = document.getElementById('dispenseCheckbox').checked;

        // Check if file is selected
        if (!fileInput.files || fileInput.files.length === 0) {
            alert("Please select a prescription file before uploading.");
            return;
        }

        const file = fileInput.files[0];
        const fileName = file.name;

        // Get today's date
        const today = new Date().toISOString().split('T')[0];

        // Create new table row
        const tableBody = document.getElementById('unprocessedBody');
        const newRow = document.createElement('tr');

        newRow.innerHTML = `
            <td>${today}</td>
            <td>${fileName}</td>
            <td>${dispenseChecked ? 'Yes' : 'No'}</td>
            <td>
                <button class="btn-upload" onclick="openEditModal(this)">Edit</button>
                <button class="btn-upload" onclick="this.parentElement.parentElement.remove()">Remove</button>
            </td>
        `;

        tableBody.appendChild(newRow);

        // Reset form fields
        fileInput.value = '';
        document.getElementById('dispenseCheckbox').checked = false;
        document.getElementById('filePreview').style.display = 'none';
        document.getElementById('fileName').textContent = '';

        // Optional: Confirmation message
        alert("📤 Prescription uploaded successfully!");
    }

    // Show file preview (ensure you have this or similar functionality)
    document.getElementById('drop-area').addEventListener('click', () => {
        document.getElementById('prescriptionFile').click();
    });

    document.getElementById('prescriptionFile').addEventListener('change', function () {
        const file = this.files[0];
        if (file) {
            document.getElementById('fileName').textContent = file.name;
            document.getElementById('filePreview').style.display = 'block';
        }
    });

    function removeSelectedFile() {
        document.getElementById('prescriptionFile').value = '';
        document.getElementById('filePreview').style.display = 'none';
        document.getElementById('fileName').textContent = '';
    }

    </script>
